Classfile /Users/jclark/source/better-understanding-through-bytecode/tail-call/OverflowingKt.class
  Last modified Jul 8, 2022; size 634 bytes
  MD5 checksum 6efe7bf62ce5434fdadaaedf285dec1f
  Compiled from "Overflowing.kt"
public final class OverflowingKt
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // OverflowingKt
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 3, attributes: 2
Constant pool:
   #1 = Utf8               OverflowingKt
   #2 = Class              #1             // OverflowingKt
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               main
   #6 = Utf8               ()V
   #7 = Utf8               overflow
   #8 = Utf8               (I)V
   #9 = NameAndType        #7:#8          // overflow:(I)V
  #10 = Methodref          #2.#9          // OverflowingKt.overflow:(I)V
  #11 = Utf8               i
  #12 = Utf8               I
  #13 = Utf8               ([Ljava/lang/String;)V
  #14 = NameAndType        #5:#6          // main:()V
  #15 = Methodref          #2.#14         // OverflowingKt.main:()V
  #16 = Utf8               args
  #17 = Utf8               [Ljava/lang/String;
  #18 = Utf8               Lkotlin/Metadata;
  #19 = Utf8               mv
  #20 = Integer            1
  #21 = Integer            6
  #22 = Integer            0
  #23 = Utf8               k
  #24 = Integer            2
  #25 = Utf8               xi
  #26 = Integer            48
  #27 = Utf8               d1
  #28 = Utf8               \u0000\u000e\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0010\b\u001a\u0006\u0010\u0000\u001a\u00020\u0001\u001a\u000e\u0010\u0002\u001a\u00020\u00012\u0006\u0010\u0003\u001a\u00020\u0004
  #29 = Utf8               d2
  #30 = Utf8
  #31 = Utf8               Overflowing.kt
  #32 = Utf8               Code
  #33 = Utf8               LineNumberTable
  #34 = Utf8               LocalVariableTable
  #35 = Utf8               SourceFile
  #36 = Utf8               RuntimeVisibleAnnotations
{
  public static final void main();
    descriptor: ()V
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: invokestatic  #10                 // Method overflow:(I)V
         4: return
      LineNumberTable:
        line 2: 0
        line 3: 4

  public static final void overflow(int);
    descriptor: (I)V
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: iconst_1
         2: iadd
         3: invokestatic  #10                 // Method overflow:(I)V
         6: return
      LineNumberTable:
        line 6: 0
        line 7: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0     i   I

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=0, locals=1, args_size=1
         0: invokestatic  #15                 // Method main:()V
         3: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  args   [Ljava/lang/String;
}
SourceFile: "Overflowing.kt"
RuntimeVisibleAnnotations:
  0: #18(#19=[I#20,I#21,I#22],#23=I#24,#25=I#26,#27=[s#28],#29=[s#5,s#30,s#7,s#11,s#30])
    kotlin.Metadata(
      mv=[1,6,0]
      k=2
      xi=48
      d1=["\u0000\u000e\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0010\b\u001a\u0006\u0010\u0000\u001a\u00020\u0001\u001a\u000e\u0010\u0002\u001a\u00020\u00012\u0006\u0010\u0003\u001a\u00020\u0004"]
      d2=["main","","overflow","i",""]
    )
