Classfile /Users/jclark/source/better-understanding-through-bytecode/tail-call/TailCallKt.class
  Last modified Jul 8, 2022; size 668 bytes
  MD5 checksum f04997bfca9e57472e6486caefc555a9
  Compiled from "TailCall.kt"
public final class TailCallKt
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // TailCallKt
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 3, attributes: 2
Constant pool:
   #1 = Utf8               TailCallKt
   #2 = Class              #1             // TailCallKt
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               main
   #6 = Utf8               ()V
   #7 = Utf8               dontOverflow
   #8 = Utf8               (J)V
   #9 = NameAndType        #7:#8          // dontOverflow:(J)V
  #10 = Methodref          #2.#9          // TailCallKt.dontOverflow:(J)V
  #11 = Utf8               n
  #12 = Utf8               J
  #13 = Utf8               ([Ljava/lang/String;)V
  #14 = NameAndType        #5:#6          // main:()V
  #15 = Methodref          #2.#14         // TailCallKt.main:()V
  #16 = Utf8               args
  #17 = Utf8               [Ljava/lang/String;
  #18 = Utf8               Lkotlin/Metadata;
  #19 = Utf8               mv
  #20 = Integer            1
  #21 = Integer            6
  #22 = Integer            0
  #23 = Utf8               k
  #24 = Integer            2
  #25 = Utf8               xi
  #26 = Integer            48
  #27 = Utf8               d1
  #28 = Utf8               \u0000\u000e\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\t\n\u0000\u001a\u0011\u0010\u0000\u001a\u00020\u00012\u0006\u0010\u0002\u001a\u00020\u0003H\u0086\u0010\u001a\u0006\u0010\u0004\u001a\u00020\u0001
  #29 = Utf8               d2
  #30 = Utf8
  #31 = Utf8               TailCall.kt
  #32 = Utf8               Code
  #33 = Utf8               LineNumberTable
  #34 = Utf8               StackMapTable
  #35 = Utf8               LocalVariableTable
  #36 = Utf8               SourceFile
  #37 = Utf8               RuntimeVisibleAnnotations
{
  public static final void main();
    descriptor: ()V
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: lconst_0
         1: invokestatic  #10                 // Method dontOverflow:(J)V
         4: return
      LineNumberTable:
        line 2: 0
        line 3: 4

  public static final void dontOverflow(long);
    descriptor: (J)V
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=4, args_size=1
         0: lload_0
         1: lstore_2
         2: lload_2
         3: lconst_1
         4: ladd
         5: lstore_2
         6: goto          2
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ long ]
      LineNumberTable:
        line 5: 0
        line 6: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     n   J

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=0, locals=1, args_size=1
         0: invokestatic  #15                 // Method main:()V
         3: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  args   [Ljava/lang/String;
}
SourceFile: "TailCall.kt"
RuntimeVisibleAnnotations:
  0: #18(#19=[I#20,I#21,I#22],#23=I#24,#25=I#26,#27=[s#28],#29=[s#7,s#30,s#11,s#30,s#5])
    kotlin.Metadata(
      mv=[1,6,0]
      k=2
      xi=48
      d1=["\u0000\u000e\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0010\t\n\u0000\u001a\u0011\u0010\u0000\u001a\u00020\u00012\u0006\u0010\u0002\u001a\u00020\u0003H\u0086\u0010\u001a\u0006\u0010\u0004\u001a\u00020\u0001"]
      d2=["dontOverflow","","n","","main"]
    )
